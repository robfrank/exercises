---
name: Release

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: "Default version to use when preparing a release."
        required: true
      developmentVersion:
        description: "Default version to use for new local working copy."
        required: true

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
      - uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1

  build:
    strategy:
      matrix:
        #        os: [macos-latest, windows-latest, ubuntu-latest]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    needs: check

    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - name: Cache local Maven repository
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up QEMU
        if: ${{ matrix.os != 'windows-latest' }}
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0

      - name: Set up Docker Buildx
        if: ${{ matrix.os != 'windows-latest' }}
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1

      - name: Set up JDK 22
        uses: actions/setup-java@2dfa2011c5b2a0f1489bf9e433881c92c1631f88 # v4.3.0
        with:
          distribution: "temurin"
          java-version: "22"

      - name: Set up GraalVM 22
        uses: graalvm/setup-graalvm@22cc13fe88ef133134b3798e128fb208df55e1f5 # v1.2.3
        with:
          distribution: graalvm-community
          java-version: "22"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: "true"

      - name: Configure Git User
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      - name: Maven release
        run: |
          mvn -B release:prepare release:perform \
          -DskipTests \
          -Dtag=v${{ inputs.releaseVersion }} \
          -Darguments=-DskipTests \
          -DreleaseVersion=${{ inputs.releaseVersion }} \
          -DdevelopmentVersion=${{ inputs.developmentVersion }} \
          -Dusername=$GITHUB_ACTOR \
          -Dpassword=$GITHUB_TOKEN
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ github.token }}
