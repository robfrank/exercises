---
name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions: write-all

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      - uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1

  build:
    strategy:
      matrix:
        #        os: [macos-latest, windows-latest, ubuntu-latest]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    needs: check

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Cache local Maven repository
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up QEMU
        if: ${{ matrix.os != 'windows-latest' }}
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        if: ${{ matrix.os != 'windows-latest' }}
        uses: docker/setup-buildx-action@18ce135bb5112fa8ce4ed6c17ab05699d7f3a5e0 # v3.11.0

      - name: Set up GraalVM 24
        uses: graalvm/setup-graalvm@01ed653ac833fe80569f1ef9f25585ba2811baab # v1.3.3
        with:
          distribution: graalvm-community
          java-version: "24"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: "true"

      - name: Build and Test
        run: |
          mvn -ntp verify
          mvn package -DskipTests -Pnative -Pdocker
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test Reporter
        uses: dorny/test-reporter@890a17cecf52a379fc869ab770a71657660be727 # v2.1.0
        if: success() || failure()
        with:
          name: Test Report - ${{ matrix.os }}
          path: "**/surefire-reports/TEST*.xml"
          list-suites: failed
          list-tests: failed
          reporter: java-junit

      - name: Upload binary
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: exercises-${{ matrix.os }}-${{ runner.arch }}
          path: ./cli/target/exercises-cli

      - name: Scan Image
        uses: anchore/scan-action@be7a22da4f22dde446c4c4c099887ff5b256526c # v6.3.0
        id: scan
        with:
          fail-build: false
          image: robfrank/exercises-web:latest
          output-format: sarif
          severity-cutoff: critical

      - name: Upload SARIF Files
        uses: github/codeql-action/upload-sarif@ce28f5bb42b7a9f2c824e633a3f6ee835bab6858 # v3.29.0
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Get coverage files
        id: coverage-files-generator
        if: ${{ github.actor != 'dependabot[bot]' && runner.os == 'Linux' }}
        run: echo "COVERAGE_FILES=$(find . -path **/jacoco*.xml -printf '%p,')" >> "$GITHUB_OUTPUT"

      - name: Codacy coverage reporter
        if: ${{ github.actor != 'dependabot[bot]'  && runner.os == 'Linux' }}
        uses: codacy/codacy-coverage-reporter-action@89d6c85cfafaec52c72b6c5e8b2878d33104c699 # v1.3.0
        with:
          language: java
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ${{ steps.coverage-files-generator.outputs.COVERAGE_FILES }}
